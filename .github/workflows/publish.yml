name: Publish

on:
  push:
    branches:
      - master

jobs:
  release:
    name: Release artifacts to GitHub Releases
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: column-seprator-windows
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release V${{ github.run_number }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./column-seprator.exe
          asset_name: column-seprator-v${{ github.run_number }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable

  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [linux, windows, macos]

        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: target/release/column-seprator
            asset_name: column-seprator-linux
          - name: windows
            os: windows-latest
            artifact_name: target/release/column-seprator.exe
            asset_name: column-seprator-windows
          - name: macos
            os: macos-latest
            artifact_name: target/release/column-seprator
            asset_name: column-seprator-macos

    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build
        run: cargo build --release --locked

      - name: Upload binaries to release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
